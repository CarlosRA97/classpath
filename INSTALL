Installing GNU Classpath - June 28, 2000

First, this is a development release only! Unless you are interested in
active development and debugging, or just like running random alpha code,
this release is probably not for you. 

------------------------------------------------------------------
Required Software
------------------------------------------------------------------
	- GNU autoconf 2.13
	- GNU automake 1.4
	- GNU libtool 1.3.3
	- GTK+ 1.2.x
	- IBM jikes 1.11 + patch (see www.classpath.org website)
	- libart_lgpl 2.1.0
	- gdk-pixbuf (latest from gnome.org CVS)
	- Sun's 1.1.x javah (1.2.x and 1.3.x will not work)

Before installing, note that only Japhar 1.20 or later is supported.
You will need to download that from http://www.japhar.org/ in order to
use GNU Classpath.  Japhar should be configured with --with-nspr,
--enable-shared, --enable-debugging, and --enable-logging.

This package was designed to use the GNU standard for configuration
and makefiles.  To build and install do the following:

1).  Run the "configure" script to configure the package.  There are
various options you might want to pass to configure to control how the
package is built.  Consider the following options, "configure --help"
gives a complete list.  Kaffe is not supported yet!

	--with-japhar	  configure GNU Classpath for Japhar [default=yes]

	--with-jikes	  compile classes with jikes [default=no]
	--with-kjc	  compile classes with kjc [default=no]
	--with-classlib	  specify path to a classes.zip like file
	--with-javah	  specify path to a javah-like program 

2).  Type "make" to build the package.  There is no longer a
dependency problem and we aim to keep it that way.

3).  Type "make install" to install everything.  This may require
being the superuser.

Report bugs to classpath@gnu.org.

Happy Hacking!


------------------------------------------------------------------
Japhar
------------------------------------------------------------------
The libraries are installed to a subdirectory of Japhar's lib
directory called "classpath."  The compiled classes are installed to a
subdirectory of Japhar's share directory called "classpath."

Once installed, GNU Classpath is ready to be used.  Simply ensure that
/usr/local/japhar/share/classpath is in your $CLASSPATH environment
variable.  (Change that of course if your Japhar is not installed in
/usr/local/japhar).  You'll also have to set your LD_LIBRARY_PATH
variable (or similar system configuration) to include the nspr lib
directory and the classpath subdirectory of Japhar's lib directory.

Ok, here is a configuration, build, install, and test example.  This
may or may not be appropriate for your system.

./configure --with-japhar --with-jikes --with-classlib=/usr/local/java/lib/classes.zip --with-javah=/usr/local/java/bin/javah
make
make install
export LD_LIBRARY_PATH=/usr/local/nspr/lib:/usr/local/japhar/lib/classpath:/usr/local/japhar/lib
export CLASSPATH=/usr/local/japhar/share/classpath:.
japhar --classpath /usr/local/japhar/share/:. FooClass

------------------------------------------------------------------
Misc. Notes
------------------------------------------------------------------
Use of Sun's compiler is deprecated and probably does not work.  At
least two free compilers are supported, jikes and kjc.

The --with-classlib argument expects a CLASSPATH env. style
sub-argument specifying one or more files or directories separated by
this platform's path separator character.

Recompilation may cause a lot of unneeded compilation.  This always
needs fixing.

The --enable-developer-mode and --enable-maintainer-mode options to
configure currently do nothing.  At some point these will again affect
recompilation of the Java classes in the distributed package.  Until
then, ignore them.
