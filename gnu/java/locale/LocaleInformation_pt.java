/* LocaleInformation_pt.java --
   Copyright (C) 2004  Free Software Foundation, Inc.

This file is part of GNU Classpath.

GNU Classpath is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2, or (at your option)
any later version.

GNU Classpath is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with GNU Classpath; see the file COPYING.  If not, write to the
Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
02111-1307 USA.

Linking this library statically or dynamically with other modules is
making a combined work based on this library.  Thus, the terms and
conditions of the GNU General Public License cover the whole
combination.

As a special exception, the copyright holders of this library give you
permission to link this library with independent modules to produce an
executable, regardless of the license terms of these independent
modules, and to copy and distribute the resulting executable under
terms of your choice, provided that you also meet, for each linked
independent module, the terms and conditions of the license of that
module.  An independent module is a module which is not derived from
or based on this library.  If you modify this library, you may extend
this exception to your version of the library, but you are not
obligated to do so.  If you do not wish to do so, delete this
exception statement from your version. */


// This file was automatically generated by gnu.localegen from LDML pt.xml

package gnu.java.locale;

import java.util.ListResourceBundle;

public class LocaleInformation_pt extends ListResourceBundle
{
  private static final String[] shortMonths = {
    "jan",
    "fev",
    "mar",
    "abr",
    "mai",
    "jun",
    "jul",
    "ago",
    "set",
    "out",
    "nov",
    "dez",
    null,
  };

  private static final String[] months = {
    "janeiro",
    "fevereiro",
    "mar\u00e7o",
    "abril",
    "maio",
    "junho",
    "julho",
    "agosto",
    "setembro",
    "outubro",
    "novembro",
    "dezembro",
    null,
  };

  private static final String[] shortWeekdays = {
    null,
    "dom",
    "seg",
    "ter",
    "qua",
    "qui",
    "sex",
    "s\u00e1b",
  };

  private static final String[] weekdays = {
    null,
    "domingo",
    "segunda-feira",
    "ter\u00e7a-feira",
    "quarta-feira",
    "quinta-feira",
    "sexta-feira",
    "s\u00e1bado",
  };

  private static final String[] eras = {
    "a.C.",
    "d.C.",
  };

  private static final String[][] zoneStrings =
  {
    { "America/Los_Angeles", "Hor\u00e1rio Padr\u00e3o do Pac\u00edfico", "PST", "Hor\u00e1rio de Ver\u00e3o do Pac\u00edfico", "PDT" },
    { "Africa/Casablanca", "Hor\u00e1rio do Meridiano de Greenwich", "GMT", "Hor\u00e1rio do Meridiano de Greenwich", "GMT" },
    { "America/New_York", "Hor\u00e1rio Padr\u00e3o Oriental", "EST", "Hor\u00e1rio de Ver\u00e3o Oriental", "EDT" },
    { "America/Anchorage", "Hor\u00e1rio Padr\u00e3o do Alasca", "AST", "Hor\u00e1rio de Ver\u00e3o do Alasca", "ADT" },
    { "Etc/GMT", "Hor\u00e1rio do Meridiano de Greenwich", "GMT", "Hor\u00e1rio do Meridiano de Greenwich", "GMT" },
    { "Asia/Shanghai", "Hor\u00e1rio Padr\u00e3o da China", "CTT", "Hor\u00e1rio Padr\u00e3o da China", "CDT" },
    { "America/Halifax", "Hor\u00e1rio Padr\u00e3o Atl\u00e2ntico", "AST", "Hor\u00e1rio de Ver\u00e3o Atl\u00e2ntico", "ADT" },
    { "Europe/Paris", "Hor\u00e1rio Padr\u00e3o Europa Central", "CET", "Hor\u00e1rio de Ver\u00e3o Europa Central", "CEST" },
    { "America/Denver", "Hor\u00e1rio Padr\u00e3o Montanha", "MST", "Hor\u00e1rio de Ver\u00e3o Montanha", "MDT" },
    { "Asia/Jerusalem", "Hor\u00e1rio Padr\u00e3o de Israel", "IST", "Hor\u00e1rio de Ver\u00e3o de Israel", "IDT" },
    { "America/St_Johns", "Hor\u00e1rio Padr\u00e3o de Terra Nova", "CNT", "Hor\u00e1rio de Ver\u00e3o de Terra Nova", "CDT" },
    { "Pacific/Honolulu", "Hor\u00e1rio Padr\u00e3o do Hava\u00ed", "HST", "Hor\u00e1rio Padr\u00e3o do Hava\u00ed", "HST" },
    { "America/Indianapolis", "Hor\u00e1rio Padr\u00e3o Oriental", "EST", "Hor\u00e1rio Padr\u00e3o Oriental", "EST" },
    { "America/Chicago", "Hor\u00e1rio Padr\u00e3o Central", "CST", "Hor\u00e1rio de Ver\u00e3o Central", "CDT" },
    { "Europe/Bucharest", "Hor\u00e1rio Padr\u00e3o da Europa Oriental", "EET", "Hor\u00e1rio de Ver\u00e3o da Europa Oriental", "EEST" },
    { "Asia/Tokyo", "Hor\u00e1rio Padr\u00e3o do Jap\u00e3o", "JST", "Hor\u00e1rio Padr\u00e3o do Jap\u00e3o", "JST" },
    { "America/Phoenix", "Hor\u00e1rio Padr\u00e3o Montanha", "MST", "Hor\u00e1rio Padr\u00e3o Montanha", "MST" },
  };

  private static final class Hashtableterritories extends java.util.Hashtable
  {
    public Hashtableterritories()
      {
        super();
        put("TL", "Timor Leste");
        put("TK", "Tokelau");
        put("TJ", "Tadjiquist\u00e3o");
        put("TH", "Tail\u00e2ndia");
        put("TG", "Togo");
        put("TF", "Territ\u00f3rios Franceses do Sul");
        put("GY", "Guiana");
        put("TD", "Chade");
        put("TC", "Ilhas Turks e Caicos");
        put("GW", "Guin\u00e9 Bissau");
        put("GU", "Guam");
        put("GT", "Guatemala");
        put("GS", "Ge\u00f3rgia do Sul e Ilhas Sandwich do Sul");
        put("GR", "Gr\u00e9cia");
        put("GQ", "Guin\u00e9 Equatorial");
        put("GP", "Guadalupe");
        put("SZ", "Suazil\u00e2ndia");
        put("SY", "S\u00edria");
        put("GN", "Guin\u00e9");
        put("GM", "G\u00e2mbia");
        put("GL", "Gro\u00eanlandia");
        put("SV", "El Salvador");
        put("ST", "S\u00e3o Tom\u00e9 e Pr\u00edncipe");
        put("GI", "Gibraltar");
        put("GH", "Gana");
        put("SR", "Suriname");
        put("GF", "Guiana Francesa");
        put("SP", "S\u00e9rvia");
        put("GE", "Ge\u00f3rgia");
        put("SO", "Som\u00e1lia");
        put("GD", "Granada");
        put("SN", "Senegal");
        put("SM", "San Marino");
        put("GB", "Reino Unido");
        put("SL", "Serra Leoa");
        put("GA", "Gab\u00e3o");
        put("SK", "Eslov\u00e1quia");
        put("SJ", "Svalbard e Jan Mayen");
        put("SI", "Eslov\u00eania");
        put("SH", "Santa Helena");
        put("SG", "Cingapura");
        put("SE", "Su\u00e9cia");
        put("SD", "Sud\u00e3o");
        put("SC", "Seychelles");
        put("SB", "Ilhas Salom\u00e3o");
        put("SA", "Ar\u00e1bia Saudita");
        put("FR", "Fran\u00e7a");
        put("FO", "Ilhas Faroe");
        put("FM", "Micron\u00e9sia, Estados Federados da");
        put("RW", "Ruanda");
        put("FK", "Ilhas Malvinas");
        put("RU", "R\u00fassia");
        put("FJ", "Fiji");
        put("FI", "Finl\u00e2ndia");
        put("RO", "Rom\u00eania");
        put("RE", "Reuni\u00e3o");
        put("ET", "Eti\u00f3pia");
        put("ES", "Espanha");
        put("ER", "Eritr\u00e9ia");
        put("EH", "Saara Ocidental");
        put("EG", "Egito");
        put("EE", "Est\u00f4nia");
        put("EC", "Equador");
        put("DZ", "Arg\u00e9lia");
        put("QA", "Catar");
        put("DO", "Rep\u00fablica Dominicana");
        put("PY", "Paraguai");
        put("DM", "Dominica");
        put("PW", "Palau");
        put("DK", "Dinamarca");
        put("DJ", "Djibuti");
        put("PT", "Portugal");
        put("PS", "Territ\u00f3rio da Palestina");
        put("PR", "Porto Rico");
        put("DE", "Alemanha");
        put("PN", "Pitcairn");
        put("PM", "Saint Pierre e Miquelon");
        put("PL", "Pol\u00f4nia");
        put("PK", "Paquist\u00e3o");
        put("PH", "Filipinas");
        put("PG", "Papua-Nova Guin\u00e9");
        put("PF", "Polin\u00e9sia Francesa");
        put("CZ", "Rep\u00fablica Tcheca");
        put("PE", "Peru");
        put("CY", "Chipre");
        put("CX", "Ilhas Natal");
        put("CV", "Cabo Verde");
        put("PA", "Panam\u00e1");
        put("CU", "Cuba");
        put("CR", "Costa Rica");
        put("CO", "Col\u00f4mbia");
        put("CN", "China");
        put("CM", "Rep\u00fablica dos Camar\u00f5es");
        put("CL", "Chile");
        put("CK", "Ilhas Cook");
        put("CI", "Costa do Marfim");
        put("CH", "Su\u00ed\u00e7a");
        put("CG", "Congo");
        put("CF", "Rep\u00fablica Centro-Africana");
        put("CD", "Congo, Rep\u00fablica Democr\u00e1tica do");
        put("CC", "Ilhas Cocos (Keeling)");
        put("OM", "Om\u00e3");
        put("CA", "Canad\u00e1");
        put("BZ", "Belize");
        put("BY", "Belarus");
        put("BW", "Botsuana");
        put("BV", "Ilha Bouvet");
        put("BT", "But\u00e3o");
        put("BS", "Bahamas");
        put("BR", "Brasil");
        put("NZ", "Nova Zel\u00e2ndia");
        put("BO", "Bol\u00edvia");
        put("BN", "Brunei");
        put("BM", "Bermudas");
        put("NU", "Niue");
        put("BJ", "Benin");
        put("BI", "Burundi");
        put("BH", "Bareine");
        put("NR", "Nauru");
        put("BG", "Bulg\u00e1ria");
        put("BF", "Burquina Faso");
        put("NP", "Nepal");
        put("BE", "B\u00e9lgica");
        put("NO", "Noruega");
        put("BD", "Bangladesh");
        put("BB", "Barbados");
        put("ZW", "Zimb\u00e1bwe");
        put("NL", "Pa\u00edses Baixos");
        put("BA", "B\u00f3snia-Herzeg\u00f3vina");
        put("NI", "Nicar\u00e1gua");
        put("NG", "Nig\u00e9ria");
        put("NF", "Ilha Norfolk");
        put("AZ", "Azerbaij\u00e3o");
        put("NE", "N\u00edger");
        put("NC", "Nova Caled\u00f4nia");
        put("AW", "Aruba");
        put("ZM", "Z\u00e2mbia");
        put("NA", "Nam\u00edbia");
        put("AU", "Austr\u00e1lia");
        put("AT", "\u00c1ustria");
        put("AS", "Samoa Americana");
        put("AR", "Argentina");
        put("AQ", "Ant\u00e1rtida");
        put("MZ", "Mo\u00e7ambique");
        put("AO", "Angola");
        put("MY", "Mal\u00e1sia");
        put("AN", "Antilhas Holandesas");
        put("MX", "M\u00e9xico");
        put("AM", "Arm\u00eania");
        put("MW", "Malawi");
        put("AL", "Alb\u00e2nia");
        put("MV", "Maldivas");
        put("ZA", "\u00c1frica do Sul");
        put("MU", "Maur\u00edcio");
        put("MT", "Malta");
        put("AI", "Anguilla");
        put("MS", "Montserrat");
        put("MR", "Maurit\u00e2nia");
        put("AG", "Ant\u00edgua e Barbuda");
        put("MQ", "Martinica");
        put("AF", "Afeganist\u00e3o");
        put("MP", "Ilhas Marianas do Norte");
        put("AE", "Emirados \u00c1rabes Unidos");
        put("MO", "Macau, Regi\u00e3o Admin. Especial da China");
        put("AD", "Andorra");
        put("MN", "Mong\u00f3lia");
        put("MM", "Mianm\u00e1");
        put("ML", "Mali");
        put("MK", "Maced\u00f4nia, Rep\u00fablica da");
        put("YU", "Iugosl\u00e1via");
        put("YT", "Mayotte");
        put("MH", "Ilhas Marshall");
        put("MG", "Madagascar");
        put("MD", "Moldova, Rep\u00fablica de");
        put("MC", "M\u00f4naco");
        put("MA", "Marrocos");
        put("YE", "I\u00eamen");
        put("LY", "L\u00edbia");
        put("LV", "Let\u00f4nia");
        put("LU", "Luxemburgo");
        put("LT", "Litu\u00e2nia");
        put("LS", "Lesoto");
        put("LR", "Lib\u00e9ria");
        put("LK", "Sri Lanka");
        put("LI", "Liechtenstein");
        put("LC", "Santa L\u00facia");
        put("LB", "L\u00edbano");
        put("LA", "Rep\u00fablica Democr\u00e1tica Popular de Lao");
        put("KZ", "Casaquist\u00e3o");
        put("KY", "Ilhas Caiman");
        put("KW", "Kuwait");
        put("KR", "Cor\u00e9ia, Sul");
        put("KP", "Cor\u00e9ia, Norte");
        put("KN", "S\u00e3o Cristov\u00e3o e Nevis");
        put("KM", "Comores");
        put("KI", "Quiribati");
        put("WS", "Samoa");
        put("KH", "Camboja");
        put("KG", "Quirguist\u00e3o");
        put("KE", "Qu\u00eania");
        put("WF", "Wallis e Futuna");
        put("JP", "Jap\u00e3o");
        put("JO", "Jord\u00e2nia");
        put("JM", "Jamaica");
        put("VU", "Vanuatu");
        put("VN", "Vietn\u00e3");
        put("VI", "Ilhas Virgens dos EUA");
        put("VG", "Ilhas Virgens Brit\u00e2nicas");
        put("VE", "Venezuela");
        put("VC", "S\u00e3o Vicente e Granadinas");
        put("VA", "Vaticano");
        put("IT", "It\u00e1lia");
        put("IS", "Isl\u00e2ndia");
        put("IR", "Ir\u00e3");
        put("IQ", "Iraque");
        put("UZ", "Uzbequist\u00e3o");
        put("IO", "Territ\u00f3rio Brit\u00e2nico do Oceano \u00cdndico");
        put("UY", "Uruguai");
        put("IN", "\u00cdndia");
        put("IL", "Israel");
        put("US", "Estados Unidos");
        put("IE", "Irlanda");
        put("ID", "Indon\u00e9sia");
        put("UM", "Ilhas Menores Distantes dos Estados Unidos");
        put("UG", "Uganda");
        put("UA", "Ucr\u00e2nia");
        put("HU", "Hungria");
        put("HT", "Haiti");
        put("HR", "Cro\u00e1cia");
        put("TZ", "Tanz\u00e2nia");
        put("HN", "Honduras");
        put("HM", "Ilha Heard e Ilhas McDonald");
        put("TW", "Taiwan");
        put("TV", "Tuvalu");
        put("HK", "Hong Kong, Regi\u00e3o Admin. Especial da China");
        put("TT", "Trinidad e Tobago");
        put("TR", "Turquia");
        put("TO", "Tonga");
        put("TN", "Tun\u00edsia");
        put("TM", "Turcomenist\u00e3o");
      }
  }

  private static final Object territories = new Hashtableterritories();

  private static final Object[][] contents =
  {
    { "decimalSeparator", "," },
    { "groupingSeparator", "." },
    { "shortMonths", shortMonths },
    { "months", months },
    { "shortWeekdays", shortWeekdays },
    { "weekdays", weekdays },
    { "eras", eras },
    { "shortDateFormat", "dd-MM-yyyy" },
    { "mediumDateFormat", "d/MMM/yyyy" },
    { "longDateFormat", "d' de 'MMMM' de 'yyyy" },
    { "fullDateFormat", "EEEE, d' de 'MMMM' de 'yyyy" },
    { "fullTimeFormat", "HH'H'mm'm'ss's' z" },
    { "zoneStrings", zoneStrings },
    { "territories", territories },
  };

  public Object[][] getContents() { return contents; }
}
