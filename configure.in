dnl Process this file with autoconf to produce a configure script.

AC_INIT(native/java.net/javanet.c)
AC_CANONICAL_HOST

PACKAGE="classpath"
VERSION="0.0"
LIBVERSION="0:0"
AC_SUBST(PACKAGE)
AC_SUBST(VERSION)
AC_SUBST(LIBVERSION)
AM_INIT_AUTOMAKE(${PACKAGE}, ${VERSION})

# this file is empty, is this supposed to be here? -gcb
#AM_CONFIG_HEADER(native/config.h)

AC_PREFIX_DEFAULT(/usr/local/classpath)

dnl Initialize libtool
AM_PROG_LIBTOOL

dnl required if SUBDIRS is used
AC_PROG_MAKE_SET

dnl Checks for programs.
dnl AC_PROG_CXX
AC_PROG_AWK
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LN_S
AC_HEADER_STDC
AC_CHECK_HEADERS(unistd.h)
AC_C_CONST
AC_CHECK_FUNCS(gethostname socket strerror)

dnl guile checks
GUILE_FLAGS

dnl threads packages (stolen from Japhar)
threads=no

if test "x${threads}" = xno; then
    AC_CHECK_LIB(threads, cthread_fork)
    if test "x${ac_cv_lib_threads_cthread_fork}" = xyes; then
        AC_DEFINE(USE_CTHREADS, )
        threads=yes
    fi
fi

if test "x${threads}" = xno; then
    AC_CHECK_FUNCS(_beginthreadex)
    if test "x${ac_cv_CreateThread}" = xyes; then
        AC_DEFINE(USE_WIN32_THREADS, )
        AC_CHECK_FUNCS(CloseHandle SetThreadPriority ExitThread Sleep \
                GetCurrentThreadId TlsAlloc TlsSetValue TlsGetValue)
        threads=yes
    fi
fi

if test "x${threads}" = xno; then
    AC_CHECK_LIB(pthread, pthread_create)
    if test "x${ac_cv_lib_pthread_pthread_create}" = xyes; then
      threads=yes
    fi

    if test "x${threads}" = xno; then
      AC_CHECK_LIB(c_r, pthread_create)
      if test "x${ac_cv_lib_c_r_pthread_create}" = xyes; then
        threads=yes
      fi
    fi

    if test "x${threads}" = xno; then
      # HP/UX 10.20 uses -lcma
      AC_CHECK_LIB(cma, pthread_create)
      if test "x${ac_cv_lib_cma_pthread_create}" = xyes; then
        threads=yes
      fi
    fi

    if test "x${threads}" = xno; then
      AC_CHECK_LIB(c, pthread_create)
      if test "x${ac_cv_lib_c_pthread_create}" = xyes; then
        threads=yes
      fi
    fi

    if test "x${threads}" = xyes; then
      AC_DEFINE(USE_PTHREADS, )
    fi
fi

#AC_ARG_WITH(sun-jdk,
#[  --with-sun-jdk          Specify the path to the JDK installation directory],
#[
#  AC_MSG_CHECKING("for sun jdk")
#  if test -f ${withval}/include/jni.h; then
#    AC_MSG_RESULT(using JNI headers in ${withval}/include)
#    VMINCLUDE=${withval}/include
##   AC_PREFIX_PROGRAM(java)  this sets the prefix to the program's dir
#    AC_SUBST(VMINCLUDE)
#  else
#    AC_MSG_ERROR(could not find ${withval}/include/jni.h. Use --with-sun-jdk=/path/to/jdk)
#  fi
#])

#if test "$VMINCLUDE" = ""; then
#  AC_MSG_ERROR(please specify the location of Sun's JDK with --with-sun-jdk=/path/to/jdk)
#fi

AC_ARG_WITH(japhar,
[  --with-japhar           Specify the path to the Japhar installation directory],
[
  AC_MSG_CHECKING("for japhar includes")
  if test -f ${withval}/include/japhar/jni.h; then
    AC_MSG_RESULT(using JNI headers in ${withval}/include/japhar)
    JAPHAR_CFLAGS="-I${withval}/include/japhar -I${withval}/include/japhar/private"
#   AC_PREFIX_PROGRAM(japhar)   this sets the prefix to the program's dir
    AC_SUBST(JAPHAR_CFLAGS)
  else
    AC_MSG_ERROR(could not find ${withval}/include/japhar/jni.h. Use --with-japhar)
  fi
  AC_MSG_CHECKING("for japhar libs")
  if test -f ${withval}/lib/libjni.so; then
    JAPHAR_LDFLAGS="-L${withval}/lib"
    AC_MSG_RESULT("using vm libs from $VMLIB")
    AC_SUBST(JAPHAR_LDFLAGS)
  else
    AC_MSG_ERROR(could not find libjni.so.  Try using --with-japhar)
  fi
],
[
  AC_MSG_CHECKING("for japhar includes")
  if test -f /usr/local/japhar/include/japhar/jni.h; then
    JAPHAR_CFLAGS="-I/usr/local/japhar/include/japhar -I/usr/local/japhar/include/japhar/private"
  elif test -f /usr/local/include/japhar/jni.h; then
    JAPHAR_CLFAGS="-I/usr/local/include/japhar -I/usr/local/include/japhar/private"
  elif test -f /usr/japhar/include/japhar/jni.h; then
    JAPHAR_CFLAGS="-I/usr/japhar/include/japhar -I/usr/japhar/include/japhar/private"
  elif test -f /usr/include/japhar/jni.h; then
    JAPHAR_CFLAGS="-I/usr/include/japhar -I/usr/include/japhar/private"
  fi
  if test -n "$JAPHAR_CFLAGS"; then
    AC_SUBST(JAPHAR_CFLAGS)
    AC_MSG_RESULT("using JNI headers in $JAPHAR_CFLAGS")
  else
    AC_MSG_ERROR(could not find include directory with jni.h.  Try using --with-japhar)    
  fi
  AC_MSG_CHECKING("for japhar libs")
  if test -f /usr/local/japhar/lib/libjni.so; then 
    JAPHAR_LDFLAGS="-L/usr/local/japhar/lib"
  elif test -f /usr/local/lib/libjni.so; then
    JAPHAR_LDFLAGS="-L/usr/local/lib"
  elif test -f /usr/japhar/lib/libjni.so; then
    JAPHAR_LDFLAGS="-L/usr/japhar/lib"
  elif test -f /usr/lib/libjni.so; then
    JAPHAR_LDFLAGS="-L/usr/lib"
  fi
  if test -n "$JAPHAR_LDFLAGS"; then
    AC_SUBST(JAPHAR_LDFLAGS)
    AC_MSG_RESULT("using vm libs from $JAPHAR_LDFLAGS")
  else
    AC_MSG_ERROR(could not find libjni.so.  Try using --with-japhar)
  fi
])

AC_SUBST(JAPHAR_CFLAGS)
AC_SUBST(JAPHAR_LDFLAGS)

dnl for historic reasons of the moment...
VMINCLUDE=$JAPHAR_CFLAGS
VMLIB=$JAPHAR_LDFLAGS
AC_SUBST(VMINCLUDE)
AC_SUBST(VMLIB)

if test -z "$VMINCLUDE"; then 
  AC_MSG_ERROR(could not find include directory with jni.h.  Try using --with-japhar)
fi

if test -z "$VMLIB"; then
  AC_MSG_ERROR(could not find libjni.so.  Try using --with-japhar)
fi

# This is the path to the chosen VM's include directory where jni.h
# and others can be found
AC_SUBST(VMINCLUDE)
AC_SUBST(VMLIB)

dnl AC_ARG_WITH(japhar, Install as class library for Japhar, 
dnl             AC_PREFIX_PROGRAM(japhar))
dnl AC_ARG_WITH(sunjdk, Install as class library for Sun's JDK,
dnl             AC_PREFIX_PROGRAM(java))

dnl if test prefix = ""
dnl then
dnl   AC_PREFIX_PROGRAM(japhar)
dnl fi

#if test prefix = ""
#then
#  AC_MSG_ERROR(Unable to locate Virtual Machine to configure for)
#fi

dnl this is temporary
AM_CONDITIONAL(VMJAPHAR, test -n "$JAPHAR_CFLAGS")

AC_ARG_WITH(javac,
  [  --with-javac	Specify the path to the javac-like program to use],
  [
    if test ${withval} = "" || test ${withval} = "yes" || test ${withval} = "no"; then
      # determine javac automatically
      javac_found="no"
      AC_PATH_PROG(JAVAC, guavac)
      if test -n "$JAVAC"; then
        javac_found="yes"
      fi
      if test "x"${javac_found} = "xno"; then
        AC_PATH_PROG(JAVAC, javac)
        if test -n "$JAVAC"; then
          javac_found="yes"
        fi
      fi
      if test "x"${javac_found} = "xno"; then
        AC_MSG_CHECKING("for javac")
        AC_MSG_ERROR("[no javac found]")
      fi
    else
      JAVAC=${withval}
      AC_SUBST(JAVAC)
    fi
  ],
  [
    # determine javac automatically
    javac_found="no"
    AC_PATH_PROG(JAVAC, guavac)
    if test -n "$JAVAC"; then
      javac_found="yes"
    fi
    if test "x"${javac_found} = "xno"; then
      AC_PATH_PROG(JAVAC, javac)
      if test -n "$JAVAC"; then
        javac_found="yes"
      fi
    fi
    if test "x"${javac_found} = "xno"; then
      AC_MSG_CHECKING("for javac")
      AC_MSG_ERROR("[no javac found]")
    fi
  ])

AC_SUBST(JAVAC)

AC_OUTPUT(compat/java.net/Makefile
compat/Makefile
Makefile
doc/Makefile
gnu/java/io/Makefile
gnu/java/lang/reflect/Makefile
gnu/java/lang/Makefile
gnu/java/Makefile
gnu/java/net/content/text/Makefile
gnu/java/net/content/Makefile
gnu/java/net/Makefile
gnu/java/net/http/Makefile
gnu/test/Makefile
gnu/Makefile
gnu/tools/serialver/Makefile
gnu/tools/Makefile
java/io/Makefile
java/lang/reflect/Makefile
java/lang/Makefile
java/Makefile
java/math/Makefile
java/net/Makefile
java/util/Makefile
native/Makefile
native/java.io/Makefile
native/java.lang/Makefile
native/java.lang.reflect/Makefile
native/java.net/Makefile
native/lib/Makefile
native/testsuite/Makefile
test/java.io/Makefile
test/Makefile
test/gnu.java.lang.reflect/Makefile
test/java.lang.reflect/Makefile
test/java.net/Makefile
test/java.util/Makefile
lib/Makefile)
