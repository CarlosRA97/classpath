/* DO NOT EDIT THIS FILE - it is machine generated */

#ifndef __java_io_FileDescriptor__
#define __java_io_FileDescriptor__

#include <jni.h>

#ifdef __cplusplus
extern "C"
{
#endif

extern JNIEXPORT void JNICALL Java_java_io_FileDescriptor_nativeInit (JNIEnv *env, jclass);
extern JNIEXPORT jlong JNICALL Java_java_io_FileDescriptor_nativeOpen (JNIEnv *env, jobject, jstring, jint);
extern JNIEXPORT jlong JNICALL Java_java_io_FileDescriptor_nativeClose (JNIEnv *env, jobject, jlong);
extern JNIEXPORT jlong JNICALL Java_java_io_FileDescriptor_nativeWriteByte (JNIEnv *env, jobject, jlong, jint);
extern JNIEXPORT jlong JNICALL Java_java_io_FileDescriptor_nativeWriteBuf (JNIEnv *env, jobject, jlong, jbyteArray, jint, jint);
extern JNIEXPORT jint JNICALL Java_java_io_FileDescriptor_nativeReadByte (JNIEnv *env, jobject, jlong);
extern JNIEXPORT jint JNICALL Java_java_io_FileDescriptor_nativeReadBuf (JNIEnv *env, jobject, jlong, jbyteArray, jint, jint);
extern JNIEXPORT jint JNICALL Java_java_io_FileDescriptor_nativeAvailable (JNIEnv *env, jobject, jlong);
extern JNIEXPORT jlong JNICALL Java_java_io_FileDescriptor_nativeSeek (JNIEnv *env, jobject, jlong, jlong, jint, jboolean);
extern JNIEXPORT jlong JNICALL Java_java_io_FileDescriptor_nativeGetFilePointer (JNIEnv *env, jobject, jlong);
extern JNIEXPORT jlong JNICALL Java_java_io_FileDescriptor_nativeGetLength (JNIEnv *env, jobject, jlong);
extern JNIEXPORT void JNICALL Java_java_io_FileDescriptor_nativeSetLength (JNIEnv *env, jobject, jlong, jlong);
extern JNIEXPORT jboolean JNICALL Java_java_io_FileDescriptor_nativeValid (JNIEnv *env, jobject, jlong);
extern JNIEXPORT void JNICALL Java_java_io_FileDescriptor_nativeSync (JNIEnv *env, jobject, jlong);

#ifdef __cplusplus
}
#endif

#endif /* __java_io_FileDescriptor__ */
