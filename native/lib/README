README for generic JCL libs:


Jun 20 1998: John Keiser
Initial Revision: 1.1.0

OK, everything in the JCL libs is 1.1-compliant: if it uses
anything that could be VM-specific, it pawns the job off on
the VMI, whose job it is to interface to the virtual
machine.  Some of these dependencies will go away with
JVMDI in 1.2, but until then, VMI is the way to go.

jcl.h is for generically useful stuff: right now most of
the functions it has do some simple function, check for
errors, and throw an appropriate exception if an error
occurs.

primlib.h is a way of caching the reflective types and the
wrapper types and does a little conversion between types to
boot.

jnilink.h allows you to do typical linker functions:
caching of the methodID if it is final, private, or static
method and thus cannot be overriden; or re-resolution of
the methodID for each different class.  Even re-resolution
can be made efficient by making it VM-specific; I.E.
caching the slot number instead of the name and signature.
