This is a list of classes we have written that are useless or even counterproductive under the JDK:
java.lang:
  Object - because notify() cannot get a list of people waiting for a lock
           on the Object
  Class - the reasons are too innumerable to tell :) Stems from fact that
          JDK keeps an internal pointer to internal info about the class that
          we do not have access to.
  System - identityHashCode() can't be implemented without implementing
           Object.hashCode(), which we can't do.  Also, we don't set the
	   initial properties, and I don't know how Sun does that.
  Runtime - too much VM-specific stuff, like gc() and loadLibrary().
  ClassLoader - we don't implement Class, we can't implement this.
                defineClass() uses Class internals.
  String - it appears that JDK does something with String internals.
java.lang.reflect:
  Method, Constructor, Field - must be created by Class using private vars
java.io:
  FileDescriptor - JDK does something with FileDescriptor internals.
  XXX Aaron, put in whatever depends on FileDescriptor internals.
